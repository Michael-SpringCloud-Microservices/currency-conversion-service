buildscript {
	ext {
		//springBootVersion = '1.5.18.RELEASE'
		//springBootVersion = '2.0.7.RELEASE'
		springBootVersion = '2.1.2.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.in28minutes.microservices'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
}

//ext['springCloudVersion'] = 'Edgware.SR5'
//ext['springCloudVersion'] = 'Finchley.SR2'
ext['springCloudVersion'] = 'Greenwich.RELEASE'

dependencies {
	implementation('org.springframework.boot:spring-boot-starter-actuator')
	implementation('org.springframework.boot:spring-boot-starter-web')
	implementation('org.springframework.cloud:spring-cloud-starter-config')
	//implementation('org.springframework.cloud:spring-cloud-starter-feign')
	implementation('org.springframework.cloud:spring-cloud-starter-openfeign')
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-ribbon'

	// The following dependency is for generating a unique id for each request comes in
	// This will be helpful to trace it among multiple micro services's logs
	implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'

	// For logging the messages with specific format which could be understood by zipkin
	implementation 'org.springframework.cloud:spring-cloud-starter-zipkin'

	// For connecting micro services to Rabbit MQ message broker and publish logs messages to default Exchange with Zipkin as routing key
	// Which will be delivered to Queue Zipkin
	// This is an implementation of Spring Clould Bus
	implementation 'org.springframework.amqp:spring-rabbit'

	// Spring Boot version lesser than 2.1.0, please use version of 2.4.0 for swagger
	implementation 'io.springfox:springfox-swagger2:2.6.1'
	implementation 'io.springfox:springfox-swagger-ui:2.6.1'

	runtimeOnly('org.springframework.boot:spring-boot-devtools')
	implementation('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client')
	testImplementation('org.springframework.boot:spring-boot-starter-test')
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}
